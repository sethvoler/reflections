查看文件的两个版本之间的差异如何帮助你了解引入的错误？
    可以快速查找到错误所在处，并迅速进行比较修正。对于大文件可以提高
效率，节省很多时间。

从长远来看，能轻松访问文件的整个历史记录将如何提高编程者的效率？
    当一段时间后，可以从旧版本中找到当时的编程思路，从而使得整个
编程工作具有一致性，使得效率提高。

你认为，手动选择何时创建提交（像在 Git 中做的那样）与自动保存版本
（如 Google Docs 所做的那样）各有何优缺点？
    手动提交：
        优点：使得提交的文件更具有逻辑性
        缺点：有时候很难判断提交点，或者忘记提交，或者硬件错误导致的
             无法提交。
    自动保存：
        优点：不会因硬件错误而错失提交机会，无需时刻记着需要提交这件事。
        缺点：提交的文件，不一定具有逻辑性。

你认为一些版本控制系统（例如 Git）允许在一次提交中保存多个文件，而其他系
统（例如 Google Docs）单独对待每个文件？
    像一些代码库有多个文件相关，用Git比较合适；而一些没有关联的文件用类似
Google Docs的系统比较好。

如何使用命令 git log 和 git diff 来查看文件的历史记录？
    先cd到文件所在的文件夹，然后git log找出文件的commits，再使用gif diff 第一个commit ID 和第二个commit ID进行比较

使用版本控制，如何让你更有信心进行有可能会造成破坏的更改？
    因为版本控制可以回到之前的commit，所以即使造成破坏，依然可以还原。

现在你已设置了工作空间，你想尝试使用 Git 来做些什么？
    使用Git对我的代码的更改作更好的记录。
